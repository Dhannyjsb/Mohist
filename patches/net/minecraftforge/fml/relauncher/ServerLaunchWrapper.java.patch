--- ../src-base/minecraft/net/minecraftforge/fml/relauncher/ServerLaunchWrapper.java
+++ ../src-work/minecraft/net/minecraftforge/fml/relauncher/ServerLaunchWrapper.java
@@ -19,32 +19,31 @@
 
 package net.minecraftforge.fml.relauncher;
 
-import java.lang.reflect.Method;
+import red.mohist.Mohist;
 
+import red.mohist.update.Update;
+import red.mohist.down.DownloadLibraries;
+import red.mohist.down.DownloadServer;
+import red.mohist.i18n.Message;
 import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.core.LoggerContext;
 
+import java.lang.reflect.Method;
+
 public class ServerLaunchWrapper {
 
-    /**
-     * @param args
-     */
-    public static void main(String[] args)
-    {
-        new ServerLaunchWrapper().run(args);
-    }
+    public static long j;
 
-    private ServerLaunchWrapper()
+    public ServerLaunchWrapper()
     {
 
     }
 
-    private void run(String[] args)
+    public void run(String[] args)
     {
         if (System.getProperty("log4j.configurationFile") == null)
         {
             // Set this early so we don't need to reconfigure later
-            System.setProperty("log4j.configurationFile", "log4j2_server.xml");
+            System.setProperty("log4j.configurationFile", "log4j2_mohist.xml");
         }
         Class<?> launchwrapper = null;
         try
@@ -54,12 +53,21 @@
         }
         catch (Exception e)
         {
-            System.err.printf("We appear to be missing one or more essential library files.\n" +
-            		"You will need to add them to your server before FML and Forge will run successfully.");
+            System.out.println(Message.getString(Message.Not_Have_Library));
+            System.out.println(Message.getString(Message.Dw_Start));
             e.printStackTrace(System.err);
-            System.exit(1);
+            Thread t = new Thread(new DownloadServer(),"Server Download Thread");
+            Thread t1 = new Thread(new DownloadLibraries(),"Server Libraries Thread");
+            t.start();
+            t1.start();
         }
+        Mohist.LOGGER = LogManager.getLogger("Mohist");
+        Mohist.LOGGER.info(Message.getString(Message.Mohist_Start));
+        j = System.nanoTime();
 
+        //Thread t = new Thread(new Update(),"Mohist Update Thread");
+        //t.run();
+
         try
         {
             Method main = launchwrapper.getMethod("main", String[].class);
@@ -71,7 +79,7 @@
         }
         catch (Exception e)
         {
-            System.err.printf("A problem occurred running the Server launcher.");
+            System.err.printf(Message.rb.getString(Message.Mohist_Start_Error.toString()));
             e.printStackTrace(System.err);
             System.exit(1);
         }
