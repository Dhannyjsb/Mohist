--- ../src-base/minecraft/net/minecraftforge/client/resource/SelectiveReloadStateHandler.java
+++ ../src-work/minecraft/net/minecraftforge/client/resource/SelectiveReloadStateHandler.java
@@ -19,16 +19,15 @@
 
 package net.minecraftforge.client.resource;
 
+import net.minecraftforge.common.ForgeModContainer;
+
 import javax.annotation.Nullable;
 import java.util.function.Predicate;
 
-import net.minecraftforge.common.ForgeModContainer;
-
 /**
  * Handles reload parameters for selective loaders.
  */
-public enum SelectiveReloadStateHandler
-{
+public enum SelectiveReloadStateHandler {
     INSTANCE;
 
     @Nullable
@@ -41,10 +40,8 @@
      *
      * @param resourcePredicate the resource requirement predicate for the current reload
      */
-    public void beginReload(Predicate<IResourceType> resourcePredicate)
-    {
-        if (this.currentPredicate != null)
-        {
+    public void beginReload(Predicate<IResourceType> resourcePredicate) {
+        if (this.currentPredicate != null) {
             throw new IllegalStateException("Recursive resource reloading detected");
         }
 
@@ -56,10 +53,8 @@
      *
      * @return the active reload resource predicate, or an accepting one if none in progress
      */
-    public Predicate<IResourceType> get()
-    {
-        if (this.currentPredicate == null || !ForgeModContainer.selectiveResourceReloadEnabled)
-        {
+    public Predicate<IResourceType> get() {
+        if (this.currentPredicate == null || !ForgeModContainer.selectiveResourceReloadEnabled) {
             return ReloadRequirements.all();
         }
 
@@ -69,8 +64,7 @@
     /**
      * Finishes the current reload and deletes the previously added reload predicate.
      */
-    public void endReload()
-    {
+    public void endReload() {
         this.currentPredicate = null;
     }
 }
