--- ../src-base/minecraft/net/minecraftforge/common/property/Properties.java
+++ ../src-work/minecraft/net/minecraftforge/common/property/Properties.java
@@ -23,8 +23,7 @@
 import net.minecraft.block.properties.PropertyBool;
 import net.minecraftforge.common.model.IModelState;
 
-public class Properties
-{
+public class Properties {
     /**
      * Property indicating if the model should be rendered in the static renderer or in the TESR. AnimationTESR sets it to false.
      */
@@ -33,53 +32,56 @@
     /**
      * Property holding the IModelState used for animating the model in the TESR.
      */
-    public static final IUnlistedProperty<IModelState> AnimationProperty = new IUnlistedProperty<IModelState>()
-    {
+    public static final IUnlistedProperty<IModelState> AnimationProperty = new IUnlistedProperty<IModelState>() {
         @Override
-        public String getName() { return "forge_animation"; }
+        public String getName() {
+            return "forge_animation";
+        }
+
         @Override
-        public boolean isValid(IModelState state) { return true; }
+        public boolean isValid(IModelState state) {
+            return true;
+        }
+
         @Override
-        public Class<IModelState> getType() { return IModelState.class; }
+        public Class<IModelState> getType() {
+            return IModelState.class;
+        }
+
         @Override
-        public String valueToString(IModelState state) { return state.toString(); }
+        public String valueToString(IModelState state) {
+            return state.toString();
+        }
     };
 
-    public static <V extends Comparable<V>> IUnlistedProperty<V> toUnlisted(IProperty<V> property)
-    {
+    public static <V extends Comparable<V>> IUnlistedProperty<V> toUnlisted(IProperty<V> property) {
         return new PropertyAdapter<V>(property);
     }
 
-    public static class PropertyAdapter<V extends Comparable<V>> implements IUnlistedProperty<V>
-    {
+    public static class PropertyAdapter<V extends Comparable<V>> implements IUnlistedProperty<V> {
         private final IProperty<V> parent;
 
-        public PropertyAdapter(IProperty<V> parent)
-        {
+        public PropertyAdapter(IProperty<V> parent) {
             this.parent = parent;
         }
 
         @Override
-        public String getName()
-        {
+        public String getName() {
             return parent.getName();
         }
 
         @Override
-        public boolean isValid(V value)
-        {
+        public boolean isValid(V value) {
             return parent.getAllowedValues().contains(value);
         }
 
         @Override
-        public Class<V> getType()
-        {
+        public Class<V> getType() {
             return parent.getValueClass();
         }
 
         @Override
-        public String valueToString(V value)
-        {
+        public String valueToString(V value) {
             return parent.getName(value);
         }
     }
