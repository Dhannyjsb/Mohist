--- ../src-base/minecraft/net/minecraftforge/common/crafting/CompoundIngredient.java
+++ ../src-work/minecraft/net/minecraftforge/common/crafting/CompoundIngredient.java
@@ -19,30 +19,26 @@
 
 package net.minecraftforge.common.crafting;
 
-import java.util.Collection;
-import java.util.Collections;
-import java.util.List;
-
-import javax.annotation.Nonnull;
-import javax.annotation.Nullable;
-
 import com.google.common.collect.Lists;
-
 import it.unimi.dsi.fastutil.ints.IntArrayList;
 import it.unimi.dsi.fastutil.ints.IntComparators;
 import it.unimi.dsi.fastutil.ints.IntList;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.crafting.Ingredient;
 
-public class CompoundIngredient extends Ingredient
-{
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.List;
+
+public class CompoundIngredient extends Ingredient {
+    private final boolean isSimple;
     private Collection<Ingredient> children;
     private ItemStack[] stacks;
     private IntList itemIds;
-    private final boolean isSimple;
 
-    protected CompoundIngredient(Collection<Ingredient> children)
-    {
+    protected CompoundIngredient(Collection<Ingredient> children) {
         super(0);
         this.children = children;
 
@@ -54,10 +50,8 @@
 
     @Override
     @Nonnull
-    public ItemStack[] getMatchingStacks()
-    {
-        if (stacks == null)
-        {
+    public ItemStack[] getMatchingStacks() {
+        if (stacks == null) {
             List<ItemStack> tmp = Lists.newArrayList();
             for (Ingredient child : children)
                 Collections.addAll(tmp, child.getMatchingStacks());
@@ -69,11 +63,9 @@
 
     @Override
     @Nonnull
-    public IntList getValidItemStacksPacked()
-    {
+    public IntList getValidItemStacksPacked() {
         //TODO: Add a child.isInvalid()?
-        if (this.itemIds == null)
-        {
+        if (this.itemIds == null) {
             this.itemIds = new IntArrayList();
             for (Ingredient child : children)
                 this.itemIds.addAll(child.getValidItemStacksPacked());
@@ -84,8 +76,7 @@
     }
 
     @Override
-    public boolean apply(@Nullable ItemStack target)
-    {
+    public boolean apply(@Nullable ItemStack target) {
         if (target == null)
             return false;
 
@@ -97,22 +88,19 @@
     }
 
     @Override
-    protected void invalidate()
-    {
+    protected void invalidate() {
         this.itemIds = null;
         this.stacks = null;
         //Shouldn't need to invalidate children as this is only called form invalidateAll..
     }
 
     @Override
-    public boolean isSimple()
-    {
+    public boolean isSimple() {
         return isSimple;
     }
-    
+
     @Nonnull
-    public Collection<Ingredient> getChildren()
-    {
+    public Collection<Ingredient> getChildren() {
         return Collections.unmodifiableCollection(this.children);
     }
 }
