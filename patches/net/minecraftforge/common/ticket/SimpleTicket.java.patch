--- ../src-base/minecraft/net/minecraftforge/common/ticket/SimpleTicket.java
+++ ../src-work/minecraft/net/minecraftforge/common/ticket/SimpleTicket.java
@@ -28,19 +28,17 @@
  * Common class for a simple ticket based system.
  * @param <T> The type that will be used to check if your ticket matches
  */
-public abstract class SimpleTicket<T>
-{
+public abstract class SimpleTicket<T> {
+    protected boolean isValid = false;
     @Nullable
     private ITicketManager<T> manager;
-    protected boolean isValid = false;
 
     /**
      * Internal method that sets the collection from the managing system.
      * <br>
      * Should <b>not</b> be called if you just want to register a ticket to a system like the {@link net.minecraftforge.common.FarmlandWaterManager}
      */
-    public final void setBackend(@Nonnull ITicketManager<T> ticketManager)
-    {
+    public final void setBackend(@Nonnull ITicketManager<T> ticketManager) {
         Preconditions.checkState(this.manager == null, "Ticket is already registered to a managing system");
         this.manager = ticketManager;
     }
@@ -48,8 +46,7 @@
     /**
      * Checks if your ticket is still registered in the system.
      */
-    public boolean isValid()
-    {
+    public boolean isValid() {
         return isValid;
     }
 
@@ -57,11 +54,9 @@
      * Removes the ticket from the managing system.
      * After this call, any calls to {@link #isValid()} should return false unless it is registered again using {@link #validate()}
      */
-    public void invalidate()
-    {
+    public void invalidate() {
         Preconditions.checkState(this.manager != null, "Ticket is not registered to a managing system");
-        if (this.isValid())
-        {
+        if (this.isValid()) {
             this.manager.remove(this);
         }
         this.isValid = false;
@@ -70,11 +65,9 @@
     /**
      * Re-adds your ticket to the system.
      */
-    public void validate()
-    {
+    public void validate() {
         Preconditions.checkState(this.manager != null, "Ticket is not registered to a managing system");
-        if (!this.isValid())
-        {
+        if (!this.isValid()) {
             this.manager.add(this);
         }
         this.isValid = true;
