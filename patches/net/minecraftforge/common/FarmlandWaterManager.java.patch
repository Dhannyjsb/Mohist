--- ../src-base/minecraft/net/minecraftforge/common/FarmlandWaterManager.java
+++ ../src-work/minecraft/net/minecraftforge/common/FarmlandWaterManager.java
@@ -38,8 +38,7 @@
 import java.util.Map;
 import java.util.Set;
 
-public class FarmlandWaterManager
-{
+public class FarmlandWaterManager {
     private static final Int2ObjectMap<Map<ChunkPos, ChunkTicketManager<Vec3d>>> customWaterHandler = new Int2ObjectOpenHashMap<>();
 
     /**
@@ -54,17 +53,13 @@
      * @return The ticket for your requested region.
      */
     @SuppressWarnings("unchecked")
-    public static<T extends SimpleTicket<Vec3d>> T addCustomTicket(World world, T ticket, ChunkPos... chunkPoses)
-    {
+    public static <T extends SimpleTicket<Vec3d>> T addCustomTicket(World world, T ticket, ChunkPos... chunkPoses) {
         Preconditions.checkArgument(!world.isRemote, "Water region is only determined server-side");
         Preconditions.checkArgument(chunkPoses.length > 0, "Need at least one chunk pos");
         Map<ChunkPos, ChunkTicketManager<Vec3d>> ticketMap = customWaterHandler.computeIfAbsent(world.provider.getDimension(), id -> new HashMap<>());
-        if (chunkPoses.length == 1)
-        {
+        if (chunkPoses.length == 1) {
             ticket.setBackend(ticketMap.computeIfAbsent(chunkPoses[0], ChunkTicketManager::new));
-        }
-        else
-        {
+        } else {
             ChunkTicketManager<Vec3d>[] tickets = new ChunkTicketManager[chunkPoses.length];
             for (int i = 0; i < chunkPoses.length; i++)
                 tickets[i] = ticketMap.computeIfAbsent(chunkPoses[i], ChunkTicketManager::new);
@@ -85,16 +80,13 @@
      * @param aabb The region where blocks should be watered
      * @return The ticket for your requested region.
      */
-    public static AABBTicket addAABBTicket(World world, AxisAlignedBB aabb)
-    {
+    public static AABBTicket addAABBTicket(World world, AxisAlignedBB aabb) {
         //First calculate all chunks the aabb is in
         ChunkPos leftUp = new ChunkPos(((int) aabb.minX) >> 4, ((int) aabb.minZ) >> 4);
         ChunkPos rightDown = new ChunkPos(((int) aabb.maxX) >> 4, ((int) aabb.maxZ) >> 4);
         Set<ChunkPos> posSet = new HashSet<>();
-        for (int x = leftUp.x; x <= rightDown.x; x++)
-        {
-            for (int z = leftUp.z; z <= rightDown.z; z++)
-            {
+        for (int x = leftUp.x; x <= rightDown.x; x++) {
+            for (int z = leftUp.z; z <= rightDown.z; z++) {
                 posSet.add(new ChunkPos(x, z));
             }
         }
@@ -105,11 +97,9 @@
      * Tests if a block is in a region that is watered by blocks. This does not check vanilla water, see {@link net.minecraft.block.BlockFarmland#hasWater(World, BlockPos)}
      * @return true if there is a ticket with an AABB that includes your block
      */
-    public static boolean hasBlockWaterTicket(World world, BlockPos pos)
-    {
+    public static boolean hasBlockWaterTicket(World world, BlockPos pos) {
         ChunkTicketManager<Vec3d> ticketManager = getTicketManager(new ChunkPos(pos.getX() >> 4, pos.getZ() >> 4), world);
-        if (ticketManager != null)
-        {
+        if (ticketManager != null) {
             Vec3d posAsVec3d = new Vec3d(pos);
             for (SimpleTicket<Vec3d> ticket : ticketManager.getTickets()) {
                 if (ticket.matches(posAsVec3d))
@@ -119,13 +109,10 @@
         return false;
     }
 
-    static void removeTickets(Chunk chunk)
-    {
+    static void removeTickets(Chunk chunk) {
         ChunkTicketManager<Vec3d> ticketManager = getTicketManager(chunk.getPos(), chunk.getWorld());
-        if (ticketManager != null)
-        {
-            for (SimpleTicket<Vec3d> ticket : ticketManager.getTickets())
-            {
+        if (ticketManager != null) {
+            for (SimpleTicket<Vec3d> ticket : ticketManager.getTickets()) {
                 ticket.invalidate();
             }
         }
@@ -134,8 +121,7 @@
     private static ChunkTicketManager<Vec3d> getTicketManager(ChunkPos pos, World world) {
         Preconditions.checkArgument(!world.isRemote, "Water region is only determined server-side");
         Map<ChunkPos, ChunkTicketManager<Vec3d>> ticketMap = customWaterHandler.get(world.provider.getDimension());
-        if (ticketMap == null)
-        {
+        if (ticketMap == null) {
             return null;
         }
         return ticketMap.get(pos);
