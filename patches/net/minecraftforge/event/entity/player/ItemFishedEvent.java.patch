--- ../src-base/minecraft/net/minecraftforge/event/entity/player/ItemFishedEvent.java
+++ ../src-work/minecraft/net/minecraftforge/event/entity/player/ItemFishedEvent.java
@@ -36,14 +36,12 @@
  * The hook will still take the damage specified
  */
 @Cancelable
-public class ItemFishedEvent extends PlayerEvent
-{
+public class ItemFishedEvent extends PlayerEvent {
     private final NonNullList<ItemStack> stacks = NonNullList.create();
     private final EntityFishHook hook;
     private int rodDamage;
 
-    public ItemFishedEvent(List<ItemStack> stacks, int rodDamage, EntityFishHook hook)
-    {
+    public ItemFishedEvent(List<ItemStack> stacks, int rodDamage, EntityFishHook hook) {
         super(hook.getAngler());
         this.stacks.addAll(stacks);
         this.rodDamage = rodDamage;
@@ -54,8 +52,7 @@
      * Get the damage the rod will take.
      * @return The damage the rod will take
      */
-    public int getRodDamage()
-    {
+    public int getRodDamage() {
         return rodDamage;
     }
 
@@ -64,8 +61,7 @@
      * This is not added to the pre-existing damage to be taken.
      * @param rodDamage The damage the rod will take. Must be nonnegative
      */
-    public void damageRodBy(@Nonnegative int rodDamage)
-    {
+    public void damageRodBy(@Nonnegative int rodDamage) {
         Preconditions.checkArgument(rodDamage >= 0);
         this.rodDamage = rodDamage;
     }
@@ -75,16 +71,14 @@
      * You cannot use this to modify the drops the player will get.
      * If you want to affect the loot, you should use LootTables.
      */
-    public NonNullList<ItemStack> getDrops()
-    {
+    public NonNullList<ItemStack> getDrops() {
         return stacks;
     }
 
     /**
      * Use this to stuff related to the hook itself, like the position of the bobber.
      */
-    public EntityFishHook getHookEntity()
-    {
+    public EntityFishHook getHookEntity() {
         return hook;
     }
 }
