--- ../src-base/minecraft/net/minecraftforge/server/permission/DefaultPermissionHandler.java
+++ ../src-work/minecraft/net/minecraftforge/server/permission/DefaultPermissionHandler.java
@@ -35,40 +35,32 @@
  *
  * @see IPermissionHandler
  */
-public enum DefaultPermissionHandler implements IPermissionHandler
-{
+public enum DefaultPermissionHandler implements IPermissionHandler {
     INSTANCE;
     private static final HashMap<String, DefaultPermissionLevel> PERMISSION_LEVEL_MAP = new HashMap<String, DefaultPermissionLevel>();
     private static final HashMap<String, String> DESCRIPTION_MAP = new HashMap<String, String>();
 
     @Override
-    public void registerNode(String node, DefaultPermissionLevel level, String desc)
-    {
+    public void registerNode(String node, DefaultPermissionLevel level, String desc) {
         PERMISSION_LEVEL_MAP.put(node, level);
 
-        if(!desc.isEmpty())
-        {
+        if (!desc.isEmpty()) {
             DESCRIPTION_MAP.put(node, desc);
         }
     }
 
     @Override
-    public Collection<String> getRegisteredNodes()
-    {
+    public Collection<String> getRegisteredNodes() {
         return Collections.unmodifiableSet(PERMISSION_LEVEL_MAP.keySet());
     }
 
     @Override
-    public boolean hasPermission(GameProfile profile, String node, @Nullable IContext context)
-    {
+    public boolean hasPermission(GameProfile profile, String node, @Nullable IContext context) {
         DefaultPermissionLevel level = getDefaultPermissionLevel(node);
 
-        if(level == DefaultPermissionLevel.NONE)
-        {
+        if (level == DefaultPermissionLevel.NONE) {
             return false;
-        }
-        else if(level == DefaultPermissionLevel.ALL)
-        {
+        } else if (level == DefaultPermissionLevel.ALL) {
             return true;
         }
 
@@ -77,8 +69,7 @@
     }
 
     @Override
-    public String getNodeDescription(String node)
-    {
+    public String getNodeDescription(String node) {
         String desc = DESCRIPTION_MAP.get(node);
         return desc == null ? "" : desc;
     }
@@ -86,8 +77,7 @@
     /**
      * @return The default permission level of a node. If the permission isn't registred, it will return NONE
      */
-    public DefaultPermissionLevel getDefaultPermissionLevel(String node)
-    {
+    public DefaultPermissionLevel getDefaultPermissionLevel(String node) {
         DefaultPermissionLevel level = PERMISSION_LEVEL_MAP.get(node);
         return level == null ? DefaultPermissionLevel.NONE : level;
     }
