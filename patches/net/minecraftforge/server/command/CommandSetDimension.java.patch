--- ../src-base/minecraft/net/minecraftforge/server/command/CommandSetDimension.java
+++ ../src-work/minecraft/net/minecraftforge/server/command/CommandSetDimension.java
@@ -34,86 +34,70 @@
 import java.util.Collections;
 import java.util.List;
 
-public class CommandSetDimension extends CommandBase
-{
+public class CommandSetDimension extends CommandBase {
+    private static boolean checkEntity(Entity entity) {
+        // use vanilla portal logic, try to avoid doing anything too silly
+        return !entity.isRiding() && !entity.isBeingRidden() && entity.isNonBoss();
+    }
+
     @Override
-    public String getName()
-    {
+    public String getName() {
         return "setdimension";
     }
 
     @Override
-    public List<String> getAliases()
-    {
+    public List<String> getAliases() {
         return Collections.singletonList("setdim");
     }
 
     @Override
-    public String getUsage(ICommandSender sender)
-    {
+    public String getUsage(ICommandSender sender) {
         return "commands.forge.setdim.usage";
     }
 
     @Override
-    public List<String> getTabCompletions(MinecraftServer server, ICommandSender sender, String[] args, @Nullable BlockPos targetPos)
-    {
-        if (args.length > 2 && args.length <= 5)
-        {
+    public List<String> getTabCompletions(MinecraftServer server, ICommandSender sender, String[] args, @Nullable BlockPos targetPos) {
+        if (args.length > 2 && args.length <= 5) {
             return getTabCompletionCoordinate(args, 2, targetPos);
         }
         return Collections.emptyList();
     }
 
     @Override
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 2;
     }
 
     @Override
-    public void execute(MinecraftServer server, ICommandSender sender, String[] args) throws CommandException
-    {
+    public void execute(MinecraftServer server, ICommandSender sender, String[] args) throws CommandException {
         // args: <entity> <dim> [<x> <y> <z>]
-        if (args.length != 2 && args.length != 5)
-        {
+        if (args.length != 2 && args.length != 5) {
             throw new WrongUsageException("commands.forge.setdim.usage");
         }
         Entity entity = getEntity(server, sender, args[0]);
-        if (!checkEntity(entity))
-        {
+        if (!checkEntity(entity)) {
             throw new CommandException("commands.forge.setdim.invalid.entity", entity.getName());
         }
         int dimension = parseInt(args[1]);
-        if (!DimensionManager.isDimensionRegistered(dimension))
-        {
+        if (!DimensionManager.isDimensionRegistered(dimension)) {
             throw new CommandException("commands.forge.setdim.invalid.dim", dimension);
         }
-        if (dimension == entity.dimension)
-        {
+        if (dimension == entity.dimension) {
             throw new CommandException("commands.forge.setdim.invalid.nochange", entity.getName(), dimension);
         }
         BlockPos pos = args.length == 5 ? parseBlockPos(sender, args, 2, false) : sender.getPosition();
         entity.changeDimension(dimension, new CommandTeleporter(pos));
     }
 
-    private static boolean checkEntity(Entity entity)
-    {
-        // use vanilla portal logic, try to avoid doing anything too silly
-        return !entity.isRiding() && !entity.isBeingRidden() && entity.isNonBoss();
-    }
-
-    private static class CommandTeleporter implements ITeleporter
-    {
+    private static class CommandTeleporter implements ITeleporter {
         private final BlockPos targetPos;
 
-        private CommandTeleporter(BlockPos targetPos)
-        {
+        private CommandTeleporter(BlockPos targetPos) {
             this.targetPos = targetPos;
         }
 
         @Override
-        public void placeEntity(World world, Entity entity, float yaw)
-        {
+        public void placeEntity(World world, Entity entity, float yaw) {
             entity.moveToBlockPosAndAngles(targetPos, yaw, entity.rotationPitch);
         }
     }
