--- ../src-base/minecraft/net/minecraftforge/registries/RegistryDelegate.java
+++ ../src-work/minecraft/net/minecraftforge/registries/RegistryDelegate.java
@@ -20,39 +20,47 @@
 package net.minecraftforge.registries;
 
 import com.google.common.base.Objects;
-
 import net.minecraft.util.ResourceLocation;
 
 /*
  * This is the internal implementation class of the delegate.
  */
-final class RegistryDelegate<T> implements IRegistryDelegate<T>
-{
+final class RegistryDelegate<T> implements IRegistryDelegate<T> {
+    private final Class<T> type;
     private T referent;
     private ResourceLocation name;
-    private final Class<T> type;
 
-    public RegistryDelegate(T referent, Class<T> type)
-    {
+    public RegistryDelegate(T referent, Class<T> type) {
         this.referent = referent;
         this.type = type;
     }
 
     @Override
-    public T get() { return referent; }
+    public T get() {
+        return referent;
+    }
+
     @Override
-    public ResourceLocation name() { return name; }
+    public ResourceLocation name() {
+        return name;
+    }
+
     @Override
-    public Class<T> type() { return this.type; }
+    public Class<T> type() {
+        return this.type;
+    }
 
-    void changeReference(T newTarget){ this.referent = newTarget; }
-    public void setName(ResourceLocation name) { this.name = name; }
+    void changeReference(T newTarget) {
+        this.referent = newTarget;
+    }
 
+    public void setName(ResourceLocation name) {
+        this.name = name;
+    }
+
     @Override
-    public boolean equals(Object obj)
-    {
-        if (obj instanceof RegistryDelegate)
-        {
+    public boolean equals(Object obj) {
+        if (obj instanceof RegistryDelegate) {
             RegistryDelegate<?> other = (RegistryDelegate<?>) obj;
             return Objects.equal(other.name, name);
         }
@@ -60,8 +68,7 @@
     }
 
     @Override
-    public int hashCode()
-    {
+    public int hashCode() {
         return Objects.hashCode(name);
     }
 }
