--- ../src-base/minecraft/net/minecraftforge/fluids/FluidStack.java
+++ ../src-work/minecraft/net/minecraftforge/fluids/FluidStack.java
@@ -35,21 +35,16 @@
  * equal.
  *
  */
-public class FluidStack
-{
+public class FluidStack {
     public int amount;
     public NBTTagCompound tag;
     private IRegistryDelegate<Fluid> fluidDelegate;
 
-    public FluidStack(Fluid fluid, int amount)
-    {
-        if (fluid == null)
-        {
+    public FluidStack(Fluid fluid, int amount) {
+        if (fluid == null) {
             FMLLog.bigWarning("Null fluid supplied to fluidstack. Did you try and create a stack for an unregistered fluid?");
             throw new IllegalArgumentException("Cannot create a fluidstack from a null fluid");
-        }
-        else if (!FluidRegistry.isFluidRegistered(fluid))
-        {
+        } else if (!FluidRegistry.isFluidRegistered(fluid)) {
             FMLLog.bigWarning("Failed attempt to create a FluidStack for an unregistered Fluid {} (type {})", fluid.getName(), fluid.getClass().getName());
             throw new IllegalArgumentException("Cannot create a fluidstack from an unregistered fluid");
         }
@@ -57,18 +52,15 @@
         this.amount = amount;
     }
 
-    public FluidStack(Fluid fluid, int amount, NBTTagCompound nbt)
-    {
+    public FluidStack(Fluid fluid, int amount, NBTTagCompound nbt) {
         this(fluid, amount);
 
-        if (nbt != null)
-        {
+        if (nbt != null) {
             tag = (NBTTagCompound) nbt.copy();
         }
     }
 
-    public FluidStack(FluidStack stack, int amount)
-    {
+    public FluidStack(FluidStack stack, int amount) {
         this(stack.getFluid(), amount, stack.tag);
     }
 
@@ -77,63 +69,59 @@
      * will return as null.
      */
     @Nullable
-    public static FluidStack loadFluidStackFromNBT(NBTTagCompound nbt)
-    {
-        if (nbt == null)
-        {
+    public static FluidStack loadFluidStackFromNBT(NBTTagCompound nbt) {
+        if (nbt == null) {
             return null;
         }
-        if (!nbt.hasKey("FluidName", Constants.NBT.TAG_STRING))
-        {
+        if (!nbt.hasKey("FluidName", Constants.NBT.TAG_STRING)) {
             return null;
         }
 
         String fluidName = nbt.getString("FluidName");
-        if (FluidRegistry.getFluid(fluidName) == null)
-        {
+        if (FluidRegistry.getFluid(fluidName) == null) {
             return null;
         }
         FluidStack stack = new FluidStack(FluidRegistry.getFluid(fluidName), nbt.getInteger("Amount"));
 
-        if (nbt.hasKey("Tag"))
-        {
+        if (nbt.hasKey("Tag")) {
             stack.tag = nbt.getCompoundTag("Tag");
         }
         return stack;
     }
 
-    public NBTTagCompound writeToNBT(NBTTagCompound nbt)
-    {
+    /**
+     * Determines if the NBT Tags are equal. Useful if the FluidIDs are known to be equal.
+     */
+    public static boolean areFluidStackTagsEqual(@Nullable FluidStack stack1, @Nullable FluidStack stack2) {
+        return stack1 == null && stack2 == null ? true : stack1 == null || stack2 == null ? false : stack1.isFluidStackTagEqual(stack2);
+    }
+
+    public NBTTagCompound writeToNBT(NBTTagCompound nbt) {
         nbt.setString("FluidName", FluidRegistry.getFluidName(getFluid()));
         nbt.setInteger("Amount", amount);
 
-        if (tag != null)
-        {
+        if (tag != null) {
             nbt.setTag("Tag", tag);
         }
         return nbt;
     }
 
-    public final Fluid getFluid()
-    {
+    public final Fluid getFluid() {
         return fluidDelegate.get();
     }
 
-    public String getLocalizedName()
-    {
+    public String getLocalizedName() {
         return this.getFluid().getLocalizedName(this);
     }
 
-    public String getUnlocalizedName()
-    {
+    public String getUnlocalizedName() {
         return this.getFluid().getUnlocalizedName(this);
     }
 
     /**
      * @return A copy of this FluidStack
      */
-    public FluidStack copy()
-    {
+    public FluidStack copy() {
         return new FluidStack(getFluid(), amount, tag);
     }
 
@@ -144,32 +132,21 @@
      *            The FluidStack for comparison
      * @return true if the Fluids (IDs and NBT Tags) are the same
      */
-    public boolean isFluidEqual(@Nullable FluidStack other)
-    {
+    public boolean isFluidEqual(@Nullable FluidStack other) {
         return other != null && getFluid() == other.getFluid() && isFluidStackTagEqual(other);
     }
 
-    private boolean isFluidStackTagEqual(FluidStack other)
-    {
+    private boolean isFluidStackTagEqual(FluidStack other) {
         return tag == null ? other.tag == null : other.tag == null ? false : tag.equals(other.tag);
     }
 
     /**
-     * Determines if the NBT Tags are equal. Useful if the FluidIDs are known to be equal.
-     */
-    public static boolean areFluidStackTagsEqual(@Nullable FluidStack stack1, @Nullable FluidStack stack2)
-    {
-        return stack1 == null && stack2 == null ? true : stack1 == null || stack2 == null ? false : stack1.isFluidStackTagEqual(stack2);
-    }
-
-    /**
      * Determines if the Fluids are equal and this stack is larger.
      *
      * @param other
      * @return true if this FluidStack contains the other FluidStack (same fluid and >= amount)
      */
-    public boolean containsFluid(@Nullable FluidStack other)
-    {
+    public boolean containsFluid(@Nullable FluidStack other) {
         return isFluidEqual(other) && amount >= other.amount;
     }
 
@@ -180,8 +157,7 @@
      *            - the FluidStack for comparison
      * @return true if the two FluidStacks are exactly the same
      */
-    public boolean isFluidStackIdentical(FluidStack other)
-    {
+    public boolean isFluidStackIdentical(FluidStack other) {
         return isFluidEqual(other) && amount == other.amount;
     }
 
@@ -193,10 +169,8 @@
      *            The ItemStack for comparison
      * @return true if the Fluids (IDs and NBT Tags) are the same
      */
-    public boolean isFluidEqual(ItemStack other)
-    {
-        if (other == null)
-        {
+    public boolean isFluidEqual(ItemStack other) {
+        if (other == null) {
             return false;
         }
 
@@ -204,12 +178,11 @@
     }
 
     @Override
-    public final int hashCode()
-    {
+    public final int hashCode() {
         int code = 1;
-        code = 31*code + getFluid().hashCode();
+        code = 31 * code + getFluid().hashCode();
         if (tag != null)
-            code = 31*code + tag.hashCode();
+            code = 31 * code + tag.hashCode();
         return code;
     }
 
@@ -219,10 +192,8 @@
      * This is included for use in data structures.
      */
     @Override
-    public final boolean equals(Object o)
-    {
-        if (!(o instanceof FluidStack))
-        {
+    public final boolean equals(Object o) {
+        if (!(o instanceof FluidStack)) {
             return false;
         }
 
