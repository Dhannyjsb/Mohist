--- ../src-base/minecraft/net/minecraft/block/BlockDropper.java
+++ ../src-work/minecraft/net/minecraft/block/BlockDropper.java
@@ -12,59 +12,44 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 
-public class BlockDropper extends BlockDispenser
-{
+public class BlockDropper extends BlockDispenser {
     private final IBehaviorDispenseItem dropBehavior = new BehaviorDefaultDispenseItem();
 
-    protected IBehaviorDispenseItem getBehavior(ItemStack stack)
-    {
+    protected IBehaviorDispenseItem getBehavior(ItemStack stack) {
         return this.dropBehavior;
     }
 
-    public TileEntity createNewTileEntity(World worldIn, int meta)
-    {
+    public TileEntity createNewTileEntity(World worldIn, int meta) {
         return new TileEntityDropper();
     }
 
-    protected void dispense(World worldIn, BlockPos pos)
-    {
+    public void dispense(World worldIn, BlockPos pos) {
         BlockSourceImpl blocksourceimpl = new BlockSourceImpl(worldIn, pos);
-        TileEntityDispenser tileentitydispenser = (TileEntityDispenser)blocksourceimpl.getBlockTileEntity();
+        TileEntityDispenser tileentitydispenser = (TileEntityDispenser) blocksourceimpl.getBlockTileEntity();
 
-        if (tileentitydispenser != null)
-        {
+        if (tileentitydispenser != null) {
             int i = tileentitydispenser.getDispenseSlot();
 
-            if (i < 0)
-            {
+            if (i < 0) {
                 worldIn.playEvent(1001, pos, 0);
-            }
-            else
-            {
+            } else {
                 ItemStack itemstack = tileentitydispenser.getStackInSlot(i);
 
-                if (!itemstack.isEmpty() && net.minecraftforge.items.VanillaInventoryCodeHooks.dropperInsertHook(worldIn, pos, tileentitydispenser, i, itemstack))
-                {
-                    EnumFacing enumfacing = (EnumFacing)worldIn.getBlockState(pos).getValue(FACING);
+                if (!itemstack.isEmpty() && net.minecraftforge.items.VanillaInventoryCodeHooks.dropperInsertHook(worldIn, pos, tileentitydispenser, i, itemstack)) {
+                    EnumFacing enumfacing = (EnumFacing) worldIn.getBlockState(pos).getValue(FACING);
                     BlockPos blockpos = pos.offset(enumfacing);
-                    IInventory iinventory = TileEntityHopper.getInventoryAtPosition(worldIn, (double)blockpos.getX(), (double)blockpos.getY(), (double)blockpos.getZ());
+                    IInventory iinventory = TileEntityHopper.getInventoryAtPosition(worldIn, (double) blockpos.getX(), (double) blockpos.getY(), (double) blockpos.getZ());
                     ItemStack itemstack1;
 
-                    if (iinventory == null)
-                    {
+                    if (iinventory == null) {
                         itemstack1 = this.dropBehavior.dispense(blocksourceimpl, itemstack);
-                    }
-                    else
-                    {
+                    } else {
                         itemstack1 = TileEntityHopper.putStackInInventoryAllSlots(tileentitydispenser, iinventory, itemstack.copy().splitStack(1), enumfacing.getOpposite());
 
-                        if (itemstack1.isEmpty())
-                        {
+                        if (itemstack1.isEmpty()) {
                             itemstack1 = itemstack.copy();
                             itemstack1.shrink(1);
-                        }
-                        else
-                        {
+                        } else {
                             itemstack1 = itemstack.copy();
                         }
                     }
