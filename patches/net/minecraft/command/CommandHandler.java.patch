--- ../src-base/minecraft/net/minecraft/command/CommandHandler.java
+++ ../src-work/minecraft/net/minecraft/command/CommandHandler.java
@@ -14,8 +14,13 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.text.TextComponentTranslation;
 import net.minecraft.util.text.TextFormatting;
+import net.minecraftforge.fml.common.FMLCommonHandler;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.command.CommandWrapper;
+import org.bukkit.craftbukkit.v1_12_R1.command.CraftSimpleCommandMap;
+import org.bukkit.craftbukkit.v1_12_R1.command.ModCustomCommand;
+import red.mohist.i18n.Message;
 
 public abstract class CommandHandler implements ICommandManager
 {
@@ -27,15 +32,11 @@
     {
         rawCommand = rawCommand.trim();
 
-        if (rawCommand.startsWith("/"))
-        {
-            rawCommand = rawCommand.substring(1);
-        }
-
         String[] astring = rawCommand.split(" ");
         String s = astring[0];
         astring = dropFirstString(astring);
         ICommand icommand = this.commandMap.get(s);
+        if (icommand == null) icommand = CommandWrapper.toNMSCommand(sender, s);
         int i = 0;
 
         try
@@ -48,7 +49,7 @@
                 textcomponenttranslation1.getStyle().setColor(TextFormatting.RED);
                 sender.sendMessage(textcomponenttranslation1);
             }
-            else if (icommand.checkPermission(this.getServer(), sender))
+            else if (true || icommand.checkPermission(this.getServer(), sender)) // Cauldron start - disable check for permissions since we handle it on Bukkit side
             {
                 net.minecraftforge.event.CommandEvent event = new net.minecraftforge.event.CommandEvent(icommand, sender, astring);
                 if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event))
@@ -146,16 +147,32 @@
 
     public ICommand registerCommand(ICommand command)
     {
-        this.commandMap.put(command.getName(), command);
-        this.commandSet.add(command);
+        String pre = command.getClass().getName().substring(command.getClass().getName().lastIndexOf('.')+1).toLowerCase() + "." + command.getName();
+        return registerCommand(command, pre);
+    }
 
-        for (String s : command.getAliases())
-        {
-            ICommand icommand = this.commandMap.get(s);
+    public ICommand registerCommand(String permissionGroup, ICommand par1ICommand)
+    {
+        return registerCommand(par1ICommand, permissionGroup + "." + par1ICommand.getName());
+    }
 
-            if (icommand == null || !icommand.getName().equals(s))
-            {
-                this.commandMap.put(s, command);
+    public ICommand registerCommand(ICommand command, String permissionNode) {
+        List<String> list = command.getAliases();
+        this.commandMap.put(command.getName(), command);
+        this.commandSet.add(command);
+        // register vanilla commands with Bukkit to support permissions.
+        CraftSimpleCommandMap commandMap = FMLCommonHandler.instance().getMinecraftServerInstance().server.getCraftCommandMap();
+        ModCustomCommand customCommand = new ModCustomCommand(command.getName());
+        customCommand.setPermission(permissionNode);
+        if (list != null) customCommand.setAliases(list);
+        commandMap.register(command.getName(), customCommand);
+        LogManager.getLogger().debug(Message.getFormatString(Message.Command_Register, new Object[]{command.getName(), permissionNode}));
+        if (list != null) {
+            for (String s : list) {
+                ICommand icommand = (ICommand)this.commandMap.get(s);
+                if (icommand == null || !icommand.getName().equals(s)) {
+                    this.commandMap.put(s, command);
+                }
             }
         }
 
