--- ../src-base/minecraft/net/minecraft/world/storage/DerivedWorldInfo.java
+++ ../src-work/minecraft/net/minecraft/world/storage/DerivedWorldInfo.java
@@ -1,242 +1,205 @@
 package net.minecraft.world.storage;
 
-import javax.annotation.Nullable;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.math.BlockPos;
-import net.minecraft.world.DimensionType;
-import net.minecraft.world.EnumDifficulty;
-import net.minecraft.world.GameRules;
-import net.minecraft.world.GameType;
-import net.minecraft.world.WorldType;
+import net.minecraft.world.*;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class DerivedWorldInfo extends WorldInfo
-{
+import javax.annotation.Nullable;
+
+public class DerivedWorldInfo extends WorldInfo {
     private final WorldInfo delegate;
 
-    public DerivedWorldInfo(WorldInfo worldInfoIn)
-    {
+    public DerivedWorldInfo(WorldInfo worldInfoIn) {
         this.delegate = worldInfoIn;
     }
 
-    public NBTTagCompound cloneNBTCompound(@Nullable NBTTagCompound nbt)
-    {
+    public NBTTagCompound cloneNBTCompound(@Nullable NBTTagCompound nbt) {
         return this.delegate.cloneNBTCompound(nbt);
     }
 
-    public long getSeed()
-    {
+    public long getSeed() {
         return this.delegate.getSeed();
     }
 
-    public int getSpawnX()
-    {
+    public int getSpawnX() {
         return this.delegate.getSpawnX();
     }
 
-    public int getSpawnY()
-    {
-        return this.delegate.getSpawnY();
+    @SideOnly(Side.CLIENT)
+    public void setSpawnX(int x) {
     }
 
-    public int getSpawnZ()
-    {
-        return this.delegate.getSpawnZ();
+    public int getSpawnY() {
+        return this.delegate.getSpawnY();
     }
 
-    public long getWorldTotalTime()
-    {
-        return this.delegate.getWorldTotalTime();
+    @SideOnly(Side.CLIENT)
+    public void setSpawnY(int y) {
     }
 
-    public long getWorldTime()
-    {
-        return this.delegate.getWorldTime();
+    public int getSpawnZ() {
+        return this.delegate.getSpawnZ();
     }
 
     @SideOnly(Side.CLIENT)
-    public long getSizeOnDisk()
-    {
-        return this.delegate.getSizeOnDisk();
+    public void setSpawnZ(int z) {
     }
 
-    public NBTTagCompound getPlayerNBTTagCompound()
-    {
-        return this.delegate.getPlayerNBTTagCompound();
+    public long getWorldTotalTime() {
+        return this.delegate.getWorldTotalTime();
     }
 
-    public String getWorldName()
-    {
-        return this.delegate.getWorldName();
+    public void setWorldTotalTime(long time) {
     }
 
-    public int getSaveVersion()
-    {
-        return this.delegate.getSaveVersion();
+    public long getWorldTime() {
+        return this.delegate.getWorldTime();
     }
 
-    @SideOnly(Side.CLIENT)
-    public long getLastTimePlayed()
-    {
-        return this.delegate.getLastTimePlayed();
+    public void setWorldTime(long time) {
     }
 
-    public boolean isThundering()
-    {
-        return this.delegate.isThundering();
+    @SideOnly(Side.CLIENT)
+    public long getSizeOnDisk() {
+        return this.delegate.getSizeOnDisk();
     }
 
-    public int getThunderTime()
-    {
-        return this.delegate.getThunderTime();
+    public NBTTagCompound getPlayerNBTTagCompound() {
+        return this.delegate.getPlayerNBTTagCompound();
     }
 
-    public boolean isRaining()
-    {
-        return this.delegate.isRaining();
+    public String getWorldName() {
+        String name = super.getWorldName();
+        return name != null ? name : this.delegate.getWorldName();
     }
 
-    public int getRainTime()
-    {
-        return this.delegate.getRainTime();
+    public void setWorldName(String worldName) {
     }
 
-    public GameType getGameType()
-    {
-        return this.delegate.getGameType();
+    public int getSaveVersion() {
+        return this.delegate.getSaveVersion();
     }
 
-    @SideOnly(Side.CLIENT)
-    public void setSpawnX(int x)
-    {
+    public void setSaveVersion(int version) {
     }
 
     @SideOnly(Side.CLIENT)
-    public void setSpawnY(int y)
-    {
+    public long getLastTimePlayed() {
+        return this.delegate.getLastTimePlayed();
     }
 
-    public void setWorldTotalTime(long time)
-    {
+    public boolean isThundering() {
+        return this.delegate.isThundering();
     }
 
-    @SideOnly(Side.CLIENT)
-    public void setSpawnZ(int z)
-    {
+    public void setThundering(boolean thunderingIn) {
     }
 
-    public void setWorldTime(long time)
-    {
+    public int getThunderTime() {
+        return this.delegate.getThunderTime();
     }
 
-    public void setSpawn(BlockPos spawnPoint)
-    {
+    public void setThunderTime(int time) {
     }
 
-    public void setWorldName(String worldName)
-    {
+    public boolean isRaining() {
+        return this.delegate.isRaining();
     }
 
-    public void setSaveVersion(int version)
-    {
+    public void setRaining(boolean isRaining) {
     }
 
-    public void setThundering(boolean thunderingIn)
-    {
+    public int getRainTime() {
+        return this.delegate.getRainTime();
     }
 
-    public void setThunderTime(int time)
-    {
+    public void setRainTime(int time) {
     }
 
-    public void setRaining(boolean isRaining)
-    {
+    public GameType getGameType() {
+        return this.delegate.getGameType();
     }
 
-    public void setRainTime(int time)
-    {
+    public void setSpawn(BlockPos spawnPoint) {
     }
 
-    public boolean isMapFeaturesEnabled()
-    {
+    public boolean isMapFeaturesEnabled() {
         return this.delegate.isMapFeaturesEnabled();
     }
 
-    public boolean isHardcoreModeEnabled()
-    {
+    public boolean isHardcoreModeEnabled() {
         return this.delegate.isHardcoreModeEnabled();
     }
 
-    public WorldType getTerrainType()
-    {
+    public WorldType getTerrainType() {
         return this.delegate.getTerrainType();
     }
 
-    public void setTerrainType(WorldType type)
-    {
+    public void setTerrainType(WorldType type) {
     }
 
-    public boolean areCommandsAllowed()
-    {
+    public boolean areCommandsAllowed() {
         return this.delegate.areCommandsAllowed();
     }
 
-    public void setAllowCommands(boolean allow)
-    {
+    public void setAllowCommands(boolean allow) {
     }
 
-    public boolean isInitialized()
-    {
+    public boolean isInitialized() {
         return this.delegate.isInitialized();
     }
 
-    public void setServerInitialized(boolean initializedIn)
-    {
+    public void setServerInitialized(boolean initializedIn) {
     }
 
-    public GameRules getGameRulesInstance()
-    {
+    public GameRules getGameRulesInstance() {
         return this.delegate.getGameRulesInstance();
     }
 
-    public EnumDifficulty getDifficulty()
-    {
+    public EnumDifficulty getDifficulty() {
         return this.delegate.getDifficulty();
     }
 
-    public void setDifficulty(EnumDifficulty newDifficulty)
-    {
+    public void setDifficulty(EnumDifficulty newDifficulty) {
     }
 
-    public boolean isDifficultyLocked()
-    {
+    public boolean isDifficultyLocked() {
         return this.delegate.isDifficultyLocked();
     }
 
-    public void setDifficultyLocked(boolean locked)
-    {
+    public void setDifficultyLocked(boolean locked) {
     }
 
     @Deprecated
-    public void setDimensionData(DimensionType dimensionIn, NBTTagCompound compound)
-    {
+    public void setDimensionData(DimensionType dimensionIn, NBTTagCompound compound) {
         this.delegate.setDimensionData(dimensionIn, compound);
     }
 
     @Deprecated
-    public NBTTagCompound getDimensionData(DimensionType dimensionIn)
-    {
+    public NBTTagCompound getDimensionData(DimensionType dimensionIn) {
         return this.delegate.getDimensionData(dimensionIn);
     }
 
-    public void setDimensionData(int dimensionID, NBTTagCompound compound)
-    {
+    public void setDimensionData(int dimensionID, NBTTagCompound compound) {
         this.delegate.setDimensionData(dimensionID, compound);
     }
 
-    public NBTTagCompound getDimensionData(int dimensionID)
-    {
+    public NBTTagCompound getDimensionData(int dimensionID) {
         return this.delegate.getDimensionData(dimensionID);
     }
+
+    public int getDimension() {
+        return this.delegate.getDimension();
+    }
+
+    public void setDimension(int dim) {
+        this.delegate.setDimension(dim);
+    }
+
+    @Override
+    public void tick() {
+        delegate.tick();
+    }
 }
