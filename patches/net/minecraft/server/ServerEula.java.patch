--- ../src-base/minecraft/net/minecraft/server/ServerEula.java
+++ ../src-work/minecraft/net/minecraft/server/ServerEula.java
@@ -1,78 +1,67 @@
 package net.minecraft.server;
 
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.util.Properties;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.commons.io.IOUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import red.mohist.i18n.Message;
+import red.mohist.i18n.UTF8Properties;
 
+import java.io.*;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
 @SideOnly(Side.SERVER)
-public class ServerEula
-{
+public class ServerEula {
     private static final Logger LOG = LogManager.getLogger();
     private final File eulaFile;
     private final boolean acceptedEULA;
 
-    public ServerEula(File eulaFile)
-    {
+    public ServerEula(File eulaFile) {
         this.eulaFile = eulaFile;
         this.acceptedEULA = this.loadEULAFile(eulaFile);
     }
 
-    private boolean loadEULAFile(File inFile)
-    {
+    private boolean loadEULAFile(File inFile) {
         FileInputStream fileinputstream = null;
         boolean flag = false;
 
-        try
-        {
-            Properties properties = new Properties();
+        try {
+            UTF8Properties properties = new UTF8Properties();
             fileinputstream = new FileInputStream(inFile);
-            properties.load(fileinputstream);
+            properties.load(new InputStreamReader(fileinputstream, "utf-8"));
             flag = Boolean.parseBoolean(properties.getProperty("eula", "false"));
-        }
-        catch (Exception var8)
-        {
-            LOG.warn("Failed to load {}", (Object)inFile);
+        } catch (Exception var8) {
+            Object[] p = {"{}"};
+            LOG.warn(Message.getFormatString(Message.EULA_LOAD_FAIL, p), (Object) inFile);
             this.createEULAFile();
+        } finally {
+            IOUtils.closeQuietly((InputStream) fileinputstream);
         }
-        finally
-        {
-            IOUtils.closeQuietly((InputStream)fileinputstream);
-        }
 
         return flag;
     }
 
-    public boolean hasAcceptedEULA()
-    {
+    public boolean hasAcceptedEULA() {
         return this.acceptedEULA;
     }
 
-    public void createEULAFile()
-    {
+    public void createEULAFile() {
         FileOutputStream fileoutputstream = null;
 
-        try
-        {
-            Properties properties = new Properties();
+        try {
+            UTF8Properties properties = new UTF8Properties();
             fileoutputstream = new FileOutputStream(this.eulaFile);
-            properties.setProperty("eula", "false");
-            properties.store(fileoutputstream, "By changing the setting below to TRUE you are indicating your agreement to our EULA (https://account.mojang.com/documents/minecraft_eula).");
+            properties.put("eula", "false", new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString());
+            Object[] p = {"https://account.mojang.com/documents/minecraft_eula"};
+            properties.orderStore(new OutputStreamWriter(fileoutputstream, "utf-8"), Message.getFormatString(Message.EULA_TEXT, p));
+
+        } catch (Exception exception) {
+            Object[] p = {"{}"};
+            LOG.warn(Message.getFormatString(Message.EULA_SAVE_FAIL, p), this.eulaFile, exception);
+        } finally {
+            IOUtils.closeQuietly((OutputStream) fileoutputstream);
         }
-        catch (Exception exception)
-        {
-            LOG.warn("Failed to save {}", this.eulaFile, exception);
-        }
-        finally
-        {
-            IOUtils.closeQuietly((OutputStream)fileoutputstream);
-        }
     }
 }
