--- ../src-base/minecraft/net/minecraft/pathfinding/NodeProcessor.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/NodeProcessor.java
@@ -5,11 +5,10 @@
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.world.IBlockAccess;
 
-public abstract class NodeProcessor
-{
+public abstract class NodeProcessor {
+    protected final IntHashMap<PathPoint> pointMap = new IntHashMap<PathPoint>();
     protected IBlockAccess blockaccess;
     protected EntityLiving entity;
-    protected final IntHashMap<PathPoint> pointMap = new IntHashMap<PathPoint>();
     protected int entitySizeX;
     protected int entitySizeY;
     protected int entitySizeZ;
@@ -17,8 +16,7 @@
     protected boolean canOpenDoors;
     protected boolean canSwim;
 
-    public void init(IBlockAccess sourceIn, EntityLiving mob)
-    {
+    public void init(IBlockAccess sourceIn, EntityLiving mob) {
         this.blockaccess = sourceIn;
         this.entity = mob;
         this.pointMap.clearMap();
@@ -27,19 +25,16 @@
         this.entitySizeZ = MathHelper.floor(mob.width + 1.0F);
     }
 
-    public void postProcess()
-    {
+    public void postProcess() {
         this.blockaccess = null;
         this.entity = null;
     }
 
-    protected PathPoint openPoint(int x, int y, int z)
-    {
+    protected PathPoint openPoint(int x, int y, int z) {
         int i = PathPoint.makeHash(x, y, z);
         PathPoint pathpoint = this.pointMap.lookup(i);
 
-        if (pathpoint == null)
-        {
+        if (pathpoint == null) {
             pathpoint = new PathPoint(x, y, z);
             this.pointMap.addKey(i, pathpoint);
         }
@@ -57,33 +52,27 @@
 
     public abstract PathNodeType getPathNodeType(IBlockAccess blockaccessIn, int x, int y, int z);
 
-    public void setCanEnterDoors(boolean canEnterDoorsIn)
-    {
-        this.canEnterDoors = canEnterDoorsIn;
+    public boolean getCanEnterDoors() {
+        return this.canEnterDoors;
     }
 
-    public void setCanOpenDoors(boolean canOpenDoorsIn)
-    {
-        this.canOpenDoors = canOpenDoorsIn;
+    public void setCanEnterDoors(boolean canEnterDoorsIn) {
+        this.canEnterDoors = canEnterDoorsIn;
     }
 
-    public void setCanSwim(boolean canSwimIn)
-    {
-        this.canSwim = canSwimIn;
+    public boolean getCanOpenDoors() {
+        return this.canOpenDoors;
     }
 
-    public boolean getCanEnterDoors()
-    {
-        return this.canEnterDoors;
+    public void setCanOpenDoors(boolean canOpenDoorsIn) {
+        this.canOpenDoors = canOpenDoorsIn;
     }
 
-    public boolean getCanOpenDoors()
-    {
-        return this.canOpenDoors;
+    public boolean getCanSwim() {
+        return this.canSwim;
     }
 
-    public boolean getCanSwim()
-    {
-        return this.canSwim;
+    public void setCanSwim(boolean canSwimIn) {
+        this.canSwim = canSwimIn;
     }
 }
